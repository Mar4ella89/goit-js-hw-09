{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAOA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EACE,CAAEH,WAAUC,UAGdG,EACE,CAAEJ,WAAUC,S,GAGfA,E,KAlBM,CACXQ,WAAYC,SAASC,cAAc,SACnCC,kBAAmBF,SAASC,cAAc,kBAqDvCF,WAAWI,iBAAiB,UAjCH,SAAAC,GAC5BA,EAAMC,iBAON,IANC,IAEsBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALf,MAAOmB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGrBC,EAAWC,OAAOJ,EAAMK,OAASD,OAAOH,EAAKI,OAE1CC,EAAI,EAAGA,GAAKJ,EAAOG,MAAOC,GAAK,EACtC1B,EAAc0B,EAAGH,GACdI,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,QAAQC,IAAI,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,OAC1D8B,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCH,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,MAC5C,CACAiC,cAAc,EACdC,QAAS,K,IAIdC,OAAM,SAAAT,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB8B,EAAAlC,GAASmC,OAAOK,QACd,sBAAuCP,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,MAC3C,CACAiC,cAAc,EACdC,QAAS,MAGbP,QAAQC,IAAI,sBAAqCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputeForm: document.querySelector('.form'),\n  createPromisesBtn: document.querySelector('.form button'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          { position, delay }\n        );\n      } else {\n        reject(\n          { position, delay }\n        );\n      }\n    }, delay);\n  });\n}\n\nconst onSubmitCreatePromise = event => {\n  event.preventDefault();\n   const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  \n  const sumDelay = Number(delay.value) + Number(step.value)\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, sumDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            clickToClose: true,\n            timeout: 3000,\n          }\n        )\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            clickToClose: true,\n            timeout: 3000,\n          }\n        )\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\n\nrefs.inputeForm.addEventListener('submit', onSubmitCreatePromise);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","inputeForm","document","querySelector","createPromisesBtn","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","sumDelay","Number","value","i","then","param","console","log","concat","$parcel$interopDefault","Notify","success","clickToClose","timeout","catch","failure"],"version":3,"file":"03-promises.7bae1e22.js.map"}